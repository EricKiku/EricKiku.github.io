const e=JSON.parse('{"key":"v-52597a1c","path":"/zh/fontend/Framework/Vue3/Pinia.html","title":"Pinia","lang":"zh-CN","frontmatter":{"title":"Pinia","icon":"boluo","category":["前端","工具"],"tag":["Vue3"],"description":"\\"\\" 中文文档 https://pinia.web3doc.top/ 为什么要使用 Pina？ Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。 如果您熟悉 Composition API，您可能会认为您已经可以通过一个简单的 export const state = reactive({}). 这对于单页应用程序来说是正确的，但如果它是服务器端呈现的，会使您的应用程序暴露于安全漏洞。 但即使在小型单页应用程序中，您也可以从使用 Pinia 中获得很多好处：","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zh/fontend/Framework/Vue3/Pinia.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"Pinia"}],["meta",{"property":"og:description","content":"\\"\\" 中文文档 https://pinia.web3doc.top/ 为什么要使用 Pina？ Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。 如果您熟悉 Composition API，您可能会认为您已经可以通过一个简单的 export const state = reactive({}). 这对于单页应用程序来说是正确的，但如果它是服务器端呈现的，会使您的应用程序暴露于安全漏洞。 但即使在小型单页应用程序中，您也可以从使用 Pinia 中获得很多好处："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-12T06:26:17.000Z"}],["meta",{"property":"article:tag","content":"Vue3"}],["meta",{"property":"article:modified_time","content":"2023-02-12T06:26:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pinia\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-12T06:26:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"安装#","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"什么是 Store ？","slug":"什么是-store","link":"#什么是-store","children":[]},{"level":2,"title":"我什么时候应该使用","slug":"我什么时候应该使用","link":"#我什么时候应该使用","children":[]},{"level":2,"title":"使用 store#","slug":"使用-store","link":"#使用-store","children":[]},{"level":2,"title":"解构store","slug":"解构store","link":"#解构store","children":[]},{"level":2,"title":"访问 “state”","slug":"访问-state","link":"#访问-state","children":[]},{"level":2,"title":"修改state","slug":"修改state","link":"#修改state","children":[{"level":3,"title":"1.$reset()","slug":"_1-reset","link":"#_1-reset","children":[]},{"level":3,"title":"2.$subscribe()","slug":"_2-subscribe","link":"#_2-subscribe","children":[]},{"level":3,"title":"3.$onActions()","slug":"_3-onactions","link":"#_3-onactions","children":[]}]}],"git":{"createdTime":1676128875000,"updatedTime":1676183177000,"contributors":[{"name":"EricKiku","email":"2966678301@qq.com","commits":2}]},"readingTime":{"minutes":6.19,"words":1858},"filePathRelative":"zh/fontend/Framework/Vue3/Pinia.md","localizedDate":"2023年2月11日","excerpt":"<h1> \\"\\"</h1>\\n<h1> 中文文档</h1>\\n<p><a href=\\"https://pinia.web3doc.top/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://pinia.web3doc.top/</a></p>\\n<h1> 为什么要使用 Pina？</h1>\\n<p>Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。 如果您熟悉 Composition API，您可能会认为您已经可以通过一个简单的 <code>export const state = reactive({})</code>. 这对于单页应用程序来说是正确的，但如果它是服务器端呈现的，<strong>会使您的应用程序暴露于安全漏洞</strong>。 但即使在小型单页应用程序中，您也可以从使用 Pinia 中获得很多好处：</p>","autoDesc":true}');export{e as data};
