import{_ as i,W as u,X as r,Y as n,Z as s,$ as p,a3 as t,a1 as k,a2 as a,G as c}from"./framework-61af4b36.js";const d="/assets/images/image-20220413151327091.png",v="/assets/images/image-20220415210916483.png",g="/assets/images/image-20220417174308400.png",m="/assets/images/image-20220418094151080.png",b="/assets/images/image-20220418104333702.png",h="/assets/images/image-20220419091858429.png",q="/assets/images/image-20220419092020480.png",f="/assets/images/image-20220419092459651.png",x="/assets/images/image-20220419092647214.png",j="/assets/images/image-20220419153931918.png",y="/assets/images/image-20220419165940577.png",w="/assets/images/image-20220419170307964.png",V={},_=a(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> &quot;&quot;</h1><h1 id="es5和es6" tabindex="-1"><a class="header-anchor" href="#es5和es6" aria-hidden="true">#</a> ES5和ES6</h1><blockquote><p>\` ## const所定义的对象，不可以被重新定义，但是可以改变对象中的属性</p></blockquote><h2 id="es6对象字面量增强写法" tabindex="-1"><a class="header-anchor" href="#es6对象字面量增强写法" aria-hidden="true">#</a> ES6对象字面量增强写法</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">ES5</span><span class="token operator">:</span>
<span class="token keyword">const</span> name<span class="token operator">=</span><span class="token string">&#39;eric&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> height<span class="token operator">=</span><span class="token number">1.8</span>

<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">name</span><span class="token operator">:</span>name<span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span>age<span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span>height
<span class="token punctuation">}</span>


<span class="token constant">ES6</span><span class="token operator">:</span>
<span class="token keyword">const</span> name<span class="token operator">=</span><span class="token string">&#39;eric&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> height<span class="token operator">=</span><span class="token number">1.8</span>

<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
	name<span class="token punctuation">,</span>
    age<span class="token punctuation">,</span>
    height
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\` ES6会将变量名定义为key，变量的值定义为对象的key的值</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">ES5</span><span class="token literal-property property">中的函数</span><span class="token operator">:</span>
<span class="token keyword">const</span> user<span class="token operator">=</span><span class="token punctuation">{</span>
	<span class="token function-variable function">run</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">eat</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token constant">ES6</span><span class="token operator">:</span>
<span class="token keyword">const</span> user<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="vue" tabindex="-1"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h1><h2 id="vuejs安装" tabindex="-1"><a class="header-anchor" href="#vuejs安装" aria-hidden="true">#</a> Vuejs安装</h2>`,9),A={href:"https://cn.vuejs.org/v2/guide/installation.html",target:"_blank",rel:"noopener noreferrer"},C=a('<h1 id="初识vue" tabindex="-1"><a class="header-anchor" href="#初识vue" aria-hidden="true">#</a> 初识Vue</h1><blockquote><p><code>定义vue时用new定义，将new的对象赋值给一个变量时，可以用var、let、const</code> ` var为局部定义，不建议使用。let定义变量，之后可以改变值。const定义常量不可以改变值</p></blockquote><h1 id="vue模板" tabindex="-1"><a class="header-anchor" href="#vue模板" aria-hidden="true">#</a> Vue模板</h1><p>html代码中使用vue直接写出vue基础模板</p><figure><img src="'+d+'" alt="image-20220413151327091" tabindex="0" loading="lazy"><figcaption>image-20220413151327091</figcaption></figure><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  {{message}}\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;nihao&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="vue生命周期" tabindex="-1"><a class="header-anchor" href="#vue生命周期" aria-hidden="true">#</a> Vue生命周期</h1><figure><img src="https://upload-images.jianshu.io/upload_images/11370083-f279314aef6741db.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/1080/format/webp" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h1 id="mustache" tabindex="-1"><a class="header-anchor" href="#mustache" aria-hidden="true">#</a> Mustache</h1>',9),$=a('<h2 id="一、基本语法" tabindex="-1"><a class="header-anchor" href="#一、基本语法" aria-hidden="true">#</a> 一、基本语法</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  {{message}}\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;HelloWorld&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、基本表达式" tabindex="-1"><a class="header-anchor" href="#二、基本表达式" aria-hidden="true">#</a> 二、基本表达式</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  {{message + message2}}\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>` {{message}} {{message2}} `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;HelloWorld&#39;,\n      message2:&#39;,i am eric&#39;\n\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法</h1><h2 id="v-once" tabindex="-1"><a class="header-anchor" href="#v-once" aria-hidden="true">#</a> v-once</h2><p>某些情况下，不希望界面随意的跟随改变</p><p>该指令后不要跟任何表达式</p><p>该指令表示元素和组件只渲染一次，不会随着数据的改变而改变</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-once</span><span class="token punctuation">&gt;</span></span>`{{message}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;我是第一次的数据&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-html" tabindex="-1"><a class="header-anchor" href="#v-html" aria-hidden="true">#</a> v-html</h2><p>从服务器请求到的是一个html代码是需要用到v-html</p><p>使用v-html将把html代码样式的字符被vue解析</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;,\n      url:&#39;</span><span class="token template-punctuation string">`</span></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;http://www.baidu.com&quot;</span><span class="token operator">&gt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">百度一下</span><span class="token template-punctuation string">`</span></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-text" tabindex="-1"><a class="header-anchor" href="#v-text" aria-hidden="true">#</a> v-text</h2><p>和Mustache比较相似，都是用于将数据显示在界面中</p><p>会把之前标签里的内容覆盖掉</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`我是之前的数据`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;hello&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-pre" tabindex="-1"><a class="header-anchor" href="#v-pre" aria-hidden="true">#</a> v-pre</h2><p>将标签中的内容原封不动的输出在页面上</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-pre</span><span class="token punctuation">&gt;</span></span>`{{message}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;hello&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',21),H=a(`<h2 id="v-cloak" tabindex="-1"><a class="header-anchor" href="#v-cloak" aria-hidden="true">#</a> v-cloak</h2><p>在某些情况下，浏览器可能会直接显示未被vue解析的代码</p><p>cloak：斗篷</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">\`
    [v-cloak]</span><span class="token punctuation">{</span>
      <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
\`</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\`
.
.
.
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-cloak</span><span class="token punctuation">&gt;</span></span>\`
  {{message}}
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\`


\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\`
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  const app = new Vue({
    el:&#39;#app&#39;,
    data:{
      message:&#39;hello&#39;
    }
  });
</span><span class="token template-punctuation string">\`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),S=n("code",null,"在vue解析之前，div中有属性v-cloak",-1),N=n("code",null,"在vue解析之后，div中就没有了属性v-cloak，",-1),M=a('<h2 id="v-bind" tabindex="-1"><a class="header-anchor" href="#v-bind" aria-hidden="true">#</a> v-bind</h2><p>用于绑定一个或多个属性值</p><p>如图片的链接，网站a标签的链接。通过vue绑定src或href</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>imgURL<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>aHref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`百度一下`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>`\n    \n    `<span class="token comment">&lt;!-- 语法糖写法 --&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>imgURL<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>aHref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`百度一下`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;,\n      imgURL:&#39;https://s.cn.bing.net/th?id=OHR.Mitsumata_ZH-CN9794271032_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&#39;,\n      aHref:&#39;http://www.baidu.com&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>v-bind语法糖: v-bind的简写方式，如 v-bind:src=&quot;&quot; 简写为 :src=&quot;&quot;</code> ` v-bind:href=&quot;&quot; 简写为 :href=&quot;&quot;</p></blockquote><h3 id="v-bing动态绑定class属性" tabindex="-1"><a class="header-anchor" href="#v-bing动态绑定class属性" aria-hidden="true">#</a> v-bing动态绑定class属性</h3><p>动态的启动class, <mark>:class=&quot;{active:isActive,line:isLine}&quot;</mark></p><p><strong>active</strong>的<strong>css</strong>样式在<strong>isActive</strong>为<strong>true</strong>时才会显示,也可以在v-bind之外再写一个class来固定一个样式</p><p>最终解析代码时，哪个css类的值是true，哪个就被拼接在一起解析</p><div class="language-HTML line-numbers-mode" data-ext="HTML"><pre class="language-HTML"><code>`&lt;div id=&quot;app&quot;&gt;`\n  `&lt;h1 class=&quot;title&quot; v-bind:class=&quot;{active:isActive,line:isLine}&quot;&gt;`{{message}}`&lt;/h1&gt;`\n  `&lt;button @click=&quot;change()&quot;&gt;`按钮`&lt;/button&gt;`\n`&lt;/div&gt;`\n\n`&lt;script src=&quot;../js/vue.js&quot;&gt;``&lt;/script&gt;`\n`&lt;script&gt;`\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;测试一&#39;,\n      isActive:true\n    },\n    methods:{\n      change:function (){\n        this.isActive=!this.isActive\n      }\n    }\n  });\n`&lt;/script&gt;`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>` 如果过于复杂，可以放在一个<strong>methods</strong>或者<strong>computed</strong>中</p></blockquote><h4 id="methods中写css类对象方法-返回对象" tabindex="-1"><a class="header-anchor" href="#methods中写css类对象方法-返回对象" aria-hidden="true">#</a> methods中写css类对象方法，返回对象</h4><p>将<strong>class</strong>后的对象放在<strong>methods</strong>中的<strong>return</strong>方法中，可以调用方法来获取对象</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{active:isActive}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`{{message}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getClasss()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`{{message}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>change()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`按钮`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;测试一&#39;,\n      isActive:true\n    },\n    methods:{\n      change:function (){\n        this.isActive=!this.isActive\n      },\n      getClasss:function (){\n        return {active:this.isActive}\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="动态绑定class-用数组方式" tabindex="-1"><a class="header-anchor" href="#动态绑定class-用数组方式" aria-hidden="true">#</a> 动态绑定class，用数组方式</h4><p>数组中被引号引起来的不会被vue所解析，就是div受到<strong>aaaa</strong>和<strong>line</strong>的css类效果</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[active,&#39;line&#39;]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`{{message}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>change()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`按钮`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;测试一&#39;,\n      active:&#39;aaaaa&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例-点击列表某一项变色" tabindex="-1"><a class="header-anchor" href="#案例-点击列表某一项变色" aria-hidden="true">#</a> 案例：点击列表某一项变色</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">`\n    .active</span><span class="token punctuation">{</span>\n      <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  `</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(item,index) in movies<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{active:currentIndex === index}<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>liClick(index)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n      {{index}}-{{item}}\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      movies:[&#39;海王&#39;,&#39;海贼王&#39;,&#39;火影忍者&#39;,&#39;妖精的尾巴&#39;],\n      currentIndex:0\n    },\n    methods:{\n      liClick(index){\n        this.currentIndex = index\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="v-bind动态绑定style属性" tabindex="-1"><a class="header-anchor" href="#v-bind动态绑定style属性" aria-hidden="true">#</a> v-bind动态绑定style属性</h3><p>无</p><h1 id="计算属性" tabindex="-1"><a class="header-anchor" href="#计算属性" aria-hidden="true">#</a> 计算属性</h1><p>methods和computed的区别</p><ul><li>计算属性会进行缓存，如果多次使用，计算属性只会调用一次</li></ul><h2 id="_1-基本使用" tabindex="-1"><a class="header-anchor" href="#_1-基本使用" aria-hidden="true">#</a> 1.基本使用</h2><p>computed:{</p><p>}</p><p>计算属性中的方法是一个属性，调用时不需要加括号</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`{{firstName}}  {{lastName}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`{{getFullName()}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`{{fullName}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      firstName:&#39;eric&#39;,\n      lastName:&#39;kiku&#39;\n    },\n    //计算属性\n    computed:{\n      fullName:function(){\n        return this.firstName+this.lastName\n      }\n    },\n    methods:{\n      getFullName:function (){\n        return this.firstName+&#39; &#39;+this.lastName\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>` 使用直接加和<strong>methods</strong>方法和<strong>computed</strong>方法</p></blockquote><h2 id="_2-复杂使用" tabindex="-1"><a class="header-anchor" href="#_2-复杂使用" aria-hidden="true">#</a> 2.复杂使用</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  {{total}}\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      books:[\n        {id:110,name:&#39;one&#39;,price:10},\n        {id:111,name:&#39;two&#39;,price:10},\n      ]\n    },\n    computed:{\n      total:function (){\n        let sum=0;\n        for(let i=0;i</span><span class="token template-punctuation string">`</span></span><span class="token operator">&lt;</span><span class="token keyword">this</span><span class="token punctuation">.</span>books<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          sum<span class="token operator">+=</span><span class="token keyword">this</span><span class="token punctuation">.</span>books<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>price\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> sum\n      <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n`</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-计算属性的settre和getter" tabindex="-1"><a class="header-anchor" href="#_3-计算属性的settre和getter" aria-hidden="true">#</a> 3.计算属性的settre和getter</h2><p>其实计算属性的格式本应该是这样</p><p>由于不可以随意修改计算属性的值，所以默认省略set方法，只留下get方法</p><p>就变为了上述的样式</p><p>计算属性之所以在调用时没有括号，就是因为 属性变量调用get方法时不需要括号</p><blockquote><p><code>如： User user = new User();</code> ` ​ user.getNmae();</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`{{fullName}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data: {\n      message: &#39;hello&#39;,\n      firstName: &quot;eric&quot;,\n      lastName: &#39;kiku&#39;\n    },\n    computed:{\n      fullName:{\n        set:function (){\n\n        },\n        get:function (){\n          return  this.firstName+&#39; &#39; + this.lastName\n        }\n      }\n    }\n\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="事件监听" tabindex="-1"><a class="header-anchor" href="#事件监听" aria-hidden="true">#</a> 事件监听</h1><h2 id="v-on" tabindex="-1"><a class="header-anchor" href="#v-on" aria-hidden="true">#</a> v-on</h2><p>在定义方法时，如果调用的地方没有传入参数而方法却有形参，将会把 <strong>鼠标操作的Event</strong> 传入形参。</p><p>如果想传入参数和Event对象，可以使用 <mark>$Event</mark> 传输</p><blockquote><p>` 语法糖：@click</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn1()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`按钮`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn1(&#39;abc&#39;,$event)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`按钮`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    },\n    methods:{\n      btn1(abc,event){\n        console.log(abc,event);\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-on的修饰符" tabindex="-1"><a class="header-anchor" href="#v-on的修饰符" aria-hidden="true">#</a> v-on的修饰符</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token comment">&lt;!--  停止冒泡  --&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doThis<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token comment">&lt;!--  阻止默认行为  --&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doThis<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token comment">&lt;!--  阻止默认行为，没有表达式  --&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click.prevent</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token comment">&lt;!--  串联修饰符  --&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click.stop.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doThis<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token comment">&lt;!--  键修饰符，键别名  --&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doThis<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token comment">&lt;!--  键修饰符，键代码  --&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@keyup.13</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doThis<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token comment">&lt;!--  点击回调只会触发一次  --&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click.once</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doThis<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果元素的父级元素也有点击方法，那么会发生事件冒泡</p><p>按钮的点击事件触发时，div的点击事件也会触发。称为<mark>事件冒泡</mark></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    aaaa\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>` 按钮`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    },\n    methods:{\n      btn(){\n        console.log(&#39;btnClick&#39;);\n      },\n      div(){\n        console.log(&#39;divClick&#39;);\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>解决方法一：</code> ` 在点击事件处添加修饰符 : <mark>@click.stop</mark> 可以阻止冒泡</p></blockquote><p>阻止表单提交按钮的默认事件</p><h1 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断" aria-hidden="true">#</a> 条件判断</h1><h2 id="v-if、v-else-if、v-else" tabindex="-1"><a class="header-anchor" href="#v-if、v-else-if、v-else" aria-hidden="true">#</a> v-if、v-else-if、v-else</h2><ul><li>Vue的条件指令可以根据表达式的值在DOM中渲染或销毁元素或组件</li></ul><p>原理:v-if后面的条件是false时，对应的元素不会被渲染，也就是根本不会有对应的标签出现在DOM中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>isShow</span><span class="token punctuation">&gt;</span></span>`isShow是true我出来`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>`isShow是false我出来`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isShowBtn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`按钮`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;,\n      isShow:true\n    },\n    methods:{\n      isShowBtn(){\n        this.isShow=!this.isShow\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>score&gt;`=90<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`优秀`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>score&gt;`=80<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`良好`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>score&gt;`=60<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`及格`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>`不及格`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用计算属性:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`{{result}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      score:91\n    },\n    computed:{\n      result(){\n        let leve = &#39;&#39;;\n        if(this.score&gt;</span><span class="token template-punctuation string">`</span></span><span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          leve<span class="token operator">=</span><span class="token string">&#39;优秀&#39;</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>score<span class="token operator">&gt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">=60){\n          leve=&#39;及格&#39;;\n        }else{\n          leve=&#39;不及格&#39;;\n        }\n        return leve;\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-show" tabindex="-1"><a class="header-anchor" href="#v-show" aria-hidden="true">#</a> v-show</h2><ul><li>v-show和v-if都可以决定一个元素是否渲染，</li></ul><p><mark>当v-if条件为false时，此元素根本不会在DOM中</mark></p><p><mark>当v-show条件为false时，此元素仅仅是display属性设置为none而已</mark></p><blockquote><p><code>当需要在显示与隐藏之间频繁切换时，用v-show</code> ` 当只切换一次时，用v-if</p></blockquote><h1 id="循环遍历" tabindex="-1"><a class="header-anchor" href="#循环遍历" aria-hidden="true">#</a> 循环遍历</h1><h2 id="v-for循环遍历对象" tabindex="-1"><a class="header-anchor" href="#v-for循环遍历对象" aria-hidden="true">#</a> v-for循环遍历对象</h2><p>此遍历会将对象中的每一个key的value值遍历一遍</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`{{item}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;,\n      info:{\n        name:&#39;why&#39;,\n        age:18,\n        height:1.88\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>- why</code> - 18 ` - 1.88</p></blockquote><p>如果想要输出键和值,就要用格式==(value,key)==</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(value,key) in info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n        {{value}}-{{key}}\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>- why-name</code> - 18-age ` - 1.88-height</p></blockquote><p>如果想要输出value值和key值，和index值</p><p>格式:<mark>(value,key,index)</mark></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(value,key,index) in info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n        {{value}}-{{key}}-{{index}}\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件的key属性" tabindex="-1"><a class="header-anchor" href="#组件的key属性" aria-hidden="true">#</a> 组件的key属性</h2><p>在使用v-for时，在对应的元素上添加一个 <mark>:key</mark> 属性，来指定一一对应的key和遍历的值。</p><p>一句话，key的作用主要是为了高效的更新虚拟DOM</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in letters<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`{{item}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      letters:[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;]\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>` 绑定的key尽量是唯一的，如果不唯一，效果基本等于没有</p></blockquote><h2 id="哪些数组的方法是响应式的" tabindex="-1"><a class="header-anchor" href="#哪些数组的方法是响应式的" aria-hidden="true">#</a> 哪些数组的方法是响应式的</h2><ol><li>pust方法 添加方法，可以一次添加多个</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>this.options.push(&#39;a&#39;,&#39;b	&#39;)\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>pop方法 删除方法,删除最后一个元素</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>this.options.pop()\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>shift方法 删除方法，删除第一个元素</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>this.options.shift()\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>unshift方法 在数组最前面添加元素，可以一次添加多个</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>this.options.unshift(&#39;aaa&#39;)		\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>splice</li><li>sort</li><li>reverse</li></ol><blockquote><p>` 上三个没有听，等想听了再去听一下吧</p></blockquote><h1 id="javascript高阶函数的使用-未听" tabindex="-1"><a class="header-anchor" href="#javascript高阶函数的使用-未听" aria-hidden="true">#</a> JavaScript高阶函数的使用（未听）</h1><h1 id="v-model的用法" tabindex="-1"><a class="header-anchor" href="#v-model的用法" aria-hidden="true">#</a> v-model的用法</h1><h2 id="v-model-radio" tabindex="-1"><a class="header-anchor" href="#v-model-radio" aria-hidden="true">#</a> v-model:radio</h2><p>通过v-model绑定一个属性来控制radio单选框的选择</p><p>在有v-model的时候，可以不用写name也可以让这两个单选框互斥</p><p>对v-model所绑定的sex属性，sex的默认值决定radio单选的默认值</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>male<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token comment">&lt;!--没有name属性，v-model绑定的值是一样的时候，也可以互斥--&gt;</span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>male<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sex<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>男<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sex<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`男\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>female<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>female<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sex<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>女<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sex<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`女\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>`你他蜡笔点的是:{{sex}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;,\n      sex:&#39;女&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-model-checkbox" tabindex="-1"><a class="header-anchor" href="#v-model-checkbox" aria-hidden="true">#</a> v-model: checkbox</h2><p>单个复选框</p><p>绑定boolean属性，选中是true，没有选中是false。</p><p>按钮的disabled属性是参数为false时不可以点击</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`同意协议\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`下一步`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n      agree:false\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多个复选框</p><p>绑定数组属性,</p><p>被选中时就会添加在数组中，不被选中时从数组中移除</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>篮球<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hobbies<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`篮球\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>足球<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hobbies<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`足球\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>羽毛球<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hobbies<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`羽毛球\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>乒乓球<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hobbies<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`乒乓球\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`你选择的是：{{hobbies}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;,\n      hobbies:[]\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="'+v+'" alt="image-20220415210916483" tabindex="0" loading="lazy"><figcaption>image-20220415210916483</figcaption></figure><h2 id="v-model结合select" tabindex="-1"><a class="header-anchor" href="#v-model结合select" aria-hidden="true">#</a> v-model结合select</h2><p>将绑定的属性放在select里面</p><p>用来监听选择了 那个选项</p><p>在select中写入 <mark>multiple</mark> 可以多选，将选择的选项都添加到数组中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token comment">&lt;!--1.选择一个--&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fruit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>苹果<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`苹果`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>香蕉<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`香蕉`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>猕猴桃<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`猕猴桃`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>榴莲<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`榴莲`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token comment">&lt;!--1.选择多个--&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fruits<span class="token punctuation">&quot;</span></span> <span class="token attr-name">multiple</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>苹果<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`苹果`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>香蕉<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`香蕉`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>猕猴桃<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`猕猴桃`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>榴莲<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`榴莲`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>`{{fruits}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;,\n      fruit:&#39;香蕉&#39;,\n      fruits:[]\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-model的修饰符" tabindex="-1"><a class="header-anchor" href="#v-model的修饰符" aria-hidden="true">#</a> v-model的修饰符</h2><h3 id="lazy" tabindex="-1"><a class="header-anchor" href="#lazy" aria-hidden="true">#</a> .lazy</h3><p>懒加载，不会实时更新数据，在输入完之后回车才会双向绑定数据</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token comment">&lt;!--1.修饰符:lazy--&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model.lazy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`{{message}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n \n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;hello&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="number" tabindex="-1"><a class="header-anchor" href="#number" aria-hidden="true">#</a> .number</h3><p>由于input所接受的数据，默认会转成string类型，如果想要获取number类型的数据，就必须需要.number修饰符</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  \n  `<span class="token comment">&lt;!--2.修饰符：number    --&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model.number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`{{typeof age}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      age: 0\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trim" tabindex="-1"><a class="header-anchor" href="#trim" aria-hidden="true">#</a> .trim</h3><p>去除数据左右两边的空格</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token comment">&lt;!--3.修饰符：trim    --&gt;</span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      name:&#39;&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="组件化编程" tabindex="-1"><a class="header-anchor" href="#组件化编程" aria-hidden="true">#</a> 组件化编程</h1><h2 id="注册组件的基本步骤" tabindex="-1"><a class="header-anchor" href="#注册组件的基本步骤" aria-hidden="true">#</a> 注册组件的基本步骤</h2><ul><li><h3 id="创建组件构造器调用vue-extend-方法" tabindex="-1"><a class="header-anchor" href="#创建组件构造器调用vue-extend-方法" aria-hidden="true">#</a> 创建组件构造器 调用Vue.extend()方法</h3></li><li><h3 id="注册组件-调用vue-component-方法" tabindex="-1"><a class="header-anchor" href="#注册组件-调用vue-component-方法" aria-hidden="true">#</a> 注册组件 调用Vue.component()方法</h3></li><li><h3 id="使用组件-在vue实例范围内使用组件" tabindex="-1"><a class="header-anchor" href="#使用组件-在vue实例范围内使用组件" aria-hidden="true">#</a> 使用组件 在Vue实例范围内使用组件</h3></li></ul><blockquote><p>` 注册组件的Vue.component有两个参数，一个是标签名，一个是组件内容</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eric</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>eric</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n\n  //1.创建组件构造器对象\n  const cpnC = Vue.extend({\n    template:</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>我是标题<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>哈哈哈哈哈<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>嘿嘿嘿嘿嘿<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  })\n\n  //2.注册组件\n  Vue.component(&#39;eric&#39;,cpnC)\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>## 我是标题</code><code>## 哈哈哈哈哈</code> ` ## 嘿嘿嘿嘿嘿</p></blockquote><h2 id="全局组件和局部组件" tabindex="-1"><a class="header-anchor" href="#全局组件和局部组件" aria-hidden="true">#</a> 全局组件和局部组件</h2><p>创建玩组件构造器后，在实例外注册的是全局组件。在实例内部注册的是局部组件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eric</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>eric</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n\n  //1.创建组件构造器对象\n  const cpnC = Vue.extend({\n    template:</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>我是标题<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>哈哈哈哈哈<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>嘿嘿嘿嘿嘿<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  })\n\n  //2.注册组件\n  // Vue.component(&#39;eric&#39;,cpnC)\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    },\n    components:{\n      //eric使用组件时的标签名\n      eric:cpnC\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>` 新的属性：components. 为组件标签赋值， eric是想用什么样的标签，eric后的值是创建的组件构造器模板</p></blockquote><p>在创建组件对象时，可以注册另一个组件，从而将这个组件变为自己的子组件，子组件无法被外部使用</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn2</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn2</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n	//组件1\n  const cpnC1 = Vue.extend({\n    template:</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>我是标题<span class="token number">1</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>我是内容，哈哈哈<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  })\n	//组件2\n  const cpnC2 = Vue.extend({\n    template:</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>我是标题<span class="token number">2</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>我是内容，嘿嘿嘿嘿<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;cpn1&gt;</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/cpn1&gt;</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">,\n    components:{\n      cpn1:cpnC1\n    }\n  })\n\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    },\n    components:{\n      cpn2:cpnC2\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件的语法糖格式" tabindex="-1"><a class="header-anchor" href="#组件的语法糖格式" aria-hidden="true">#</a> 组件的语法糖格式</h2><p>将创建对象的这一步放在注册里面</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eric</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>eric</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eric2</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>eric2</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  //1.全局组件注册的语法糖\n  Vue.component(&#39;eric&#39;,{\n    template:</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>我是标题<span class="token number">1</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>我是内容，哈哈哈<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  })\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    },\n    components:{ //局部注册的语法糖\n      &#39;eric2&#39;:{\n        template: </span><span class="token template-punctuation string">`</span></span>\n          <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;</span><span class="token template-punctuation string">`</span></span>\n            <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>我是标题<span class="token number">2</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n            <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">`</span></span>我是内容<span class="token number">2</span>，哈哈哈<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">`</span></span>\n          <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件和模板分离" tabindex="-1"><a class="header-anchor" href="#组件和模板分离" aria-hidden="true">#</a> 组件和模板分离</h2><p>在html处写模板，注册是使用#id 引入</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eric</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>eric</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>eric<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`我是标题`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>`我是内容.....`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n\n  Vue.component(&#39;eric&#39;,{\n    template: &#39;#eric&#39;\n  })\n\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件中数据存放问题" tabindex="-1"><a class="header-anchor" href="#组件中数据存放问题" aria-hidden="true">#</a> 组件中数据存放问题</h2><p>组件注册时，除了template以外，还可以写data和methods</p><p>但是data必须是一个函数<mark>data(){}</mark> 。这是因为，函数拥有自己的作用域，在页面复用多个组件时，每一个组件中的数据都不相互影响</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  {{message}}\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eric</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>eric</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eric</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>eric</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eric</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>eric</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>eric<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`{{title}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>`{{count}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`+`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n\n  Vue.component(&#39;eric&#39;,{\n    template: &#39;#eric&#39;,\n    data(){\n      return {\n        title:&#39;i am title&#39;,\n        count:0\n      }\n    },\n    methods:{\n      add(){\n        this.count+=1\n      }\n    }\n  })\n\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;wwwww&#39;,\n      title1:&#39;i am vue.title&#39;\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="父子组件的通信" tabindex="-1"><a class="header-anchor" href="#父子组件的通信" aria-hidden="true">#</a> 父子组件的通信</h2><ul><li>通过props向子组件传递数据</li><li>通过事件向父组件发送消息</li></ul><figure><img src="'+g+'" alt="image-20220417174308400" tabindex="0" loading="lazy"><figcaption>image-20220417174308400</figcaption></figure><h3 id="父组件向子组件传输数据" tabindex="-1"><a class="header-anchor" href="#父组件向子组件传输数据" aria-hidden="true">#</a> 父组件向子组件传输数据</h3>',150),z=a('<p>2.创建对象，来存放模板和模板需要的数据</p><p>3.在vue实例中注册模板</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eric</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>cname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>eric</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token comment">&lt;!-- 创建模板 --&gt;</span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>`\n    {{title}}\n    {{cname}}\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n//创建对象\n  const cpn = {\n    template:</span><span class="token template-punctuation string">`</span></span>#cpn<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">,\n    props:[&#39;cname&#39;],\n    data(){\n      return {\n        title:&#39;我是被父组件传过来的数据&#39;\n      }\n    }\n  }\n  \n//vue实例注册模板对象\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;,\n      name:&#39;xiaoli&#39;\n    },\n    components:{\n      eric:cpn\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子组件向父组件传输数据" tabindex="-1"><a class="header-anchor" href="#子组件向父组件传输数据" aria-hidden="true">#</a> 子组件向父组件传输数据</h3><p><em>重点的代码行用星号标出</em></p><p>1.创建模板</p><p>2.创建对象，来存放模板和模板需要的数据，并且添加一个methods属性来监听子组件的事件</p><p>3.在vue实例中注册模板</p><p>4.在子组件模板中设置监听事件，触发时，在子组件对象的methods中监听到并且创建自定义事件，来将监听到的数据传输到父组件</p><p>5.父组件在使用子组件标签的地方使用<mark>v-on</mark> 语法糖就是==@== 来监听这个自定义事件，并且将监听到的事件响应到父组件实例中的methods属性的方法中，来完成子向父的传递</p><blockquote><p>` 在使用v-on来监听子组件并响应父组件的时候，只有一个参数时，可以不用写，如click的默认参数是传递一个even，子组件监听的自定义事件会默认传递自定义事件后的参数</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token comment">&lt;!--父组件模板--&gt;</span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eric</span> <span class="token attr-name">@item-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpnClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>eric</span><span class="token punctuation">&gt;</span></span>`//****\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token comment">&lt;!--模板--&gt;</span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>`\n    {{title}}\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in select<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btnClick(item)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`{{item.name}}`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  </span><span class="token template-punctuation string">`</span></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>子组件对象<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const cpn = {\n    template:</span><span class="token template-punctuation string">`</span></span>#cpn<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">,\n    data(){\n      return {\n        select:[\n          {id:&#39;a&#39;,name:&#39;热门推荐&#39;},\n          {id:&#39;a&#39;,name:&#39;手机数码&#39;},\n          {id:&#39;a&#39;,name:&#39;电脑家电&#39;}\n        ]\n      }\n    },\n    methods:{\n      btnClick(item){\n        this.$emit(&#39;item-click&#39;,item)//****\n      }\n    }\n  }\n  //父组件实例\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    },\n    components:{\n      eric:cpn\n    },\n    methods:{\n      cpnClick(item){//****\n        console.log(item);\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="父组件直接访问子组件中的属性或者方法-refs" tabindex="-1"><a class="header-anchor" href="#父组件直接访问子组件中的属性或者方法-refs" aria-hidden="true">#</a> 父组件直接访问子组件中的属性或者方法-$refs</h3><p>使用 <strong><mark>$refs</mark></strong> 来实现父组件访问子组件</p><p>1.创建子组件模板并在父组件中注册，</p><p>2.子组件有data属性和methods属性，父组件也有</p><p>3.子组件复用多次，并在父组件模板中创建一个按钮，点击按钮获取子组件中的一些数据</p><p>4.<mark>$children</mark> 也可以实现，只不过，此方法无法指定子组件对象，在之后插入其他的子组件后会错乱，而refs可以指定<mark>ref</mark> 属性来指定访问哪个对象</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btnClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`按钮`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>`我是子组件`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    },\n    methods:{		//父组件中的方法属性\n      btnClick(){\n        console.log(this.$refs.one.name);\n        this.$refs.one.showMessage();\n      }\n    },\n    components:{\n      cpn:{\n        template:</span><span class="token template-punctuation string">`</span></span>#cpn<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">,\n        data(){\n          return{\n            name:&#39;我是子组件&#39;\n          }\n        },\n        methods:{		//子组件中的方法属性\n          showMessage(){\n            console.log(&#39;showMessage&#39;);\n          }\n        }\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子访问父-未学-可不学" tabindex="-1"><a class="header-anchor" href="#子访问父-未学-可不学" aria-hidden="true">#</a> 子访问父(未学，可不学)</h3><h3 id="插槽slot" tabindex="-1"><a class="header-anchor" href="#插槽slot" aria-hidden="true">#</a> 插槽slot</h3><p>插槽是在子组件中可以占位的一个标签**== <code>&lt;slot&gt;</code> <code>&lt;/slot&gt;</code> ==** 在父组件中使用子组件时可以在插槽处插入一些标签来使组件拥有可扩展性</p><p>且slot标签有默认值，在组件处的slot处所写的组件是默认值，在父组件中不添加标签就是使用默认标签，添加其他的标签之后就不会显示默认标签，显示扩展的标签，</p><p>一行插槽可以扩展多行标签</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>`我是span`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>`我是按钮`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>`我是组件`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>`我是内容`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>`按钮`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    },\n    components:{\n      cpn:{\n        template:</span><span class="token template-punctuation string">`</span></span>#cpn<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="'+m+'" alt="image-20220418094151080" tabindex="0" loading="lazy"><figcaption>image-20220418094151080</figcaption></figure><h3 id="具名插槽slot" tabindex="-1"><a class="header-anchor" href="#具名插槽slot" aria-hidden="true">#</a> 具名插槽slot</h3><p>使插槽具有name属性，在父组件中使用插槽时，可以指定name来占用哪个插槽</p><p>有三个插槽，分别是三个按钮，父组件中只把name为left的插槽修改了，剩余两个插槽使用默认值。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`left`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>`按钮1`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>`按钮2`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>`按钮3`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>`\n  `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  const app = new Vue({\n    el:&#39;#app&#39;,\n    data:{\n      message:&#39;&#39;\n    },\n    components:{\n      cpn:{\n        template:</span><span class="token template-punctuation string">`</span></span>#cpn<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n      }\n    }\n  });\n</span><span class="token template-punctuation string">`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="'+b+'" alt="image-20220418104333702" tabindex="0" loading="lazy"><figcaption>image-20220418104333702</figcaption></figure><h1 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack" aria-hidden="true">#</a> Webpack</h1><h2 id="webpack安装" tabindex="-1"><a class="header-anchor" href="#webpack安装" aria-hidden="true">#</a> webpack安装</h2><p>在cmd中安装全局webpack3.6.0,因为vue2.0依赖该版本</p><blockquote><p>` npm install webpack@3.6.0</p></blockquote><h2 id="webpack起步" tabindex="-1"><a class="header-anchor" href="#webpack起步" aria-hidden="true">#</a> webpack起步</h2><p>src：源码 dist：打包</p><p>写完多个js文件后，无须在html页面中引入js文件，而是使用webpack来打包</p><p>在软件终端先cd到该目录下，后使用</p><blockquote><p>` webpack ./src/main.js ./dist/bundle.js</p></blockquote><p>将main.js和其中依赖的js都打包到bundle.js中</p><h2 id="webpack配置文件-78集未听" tabindex="-1"><a class="header-anchor" href="#webpack配置文件-78集未听" aria-hidden="true">#</a> webpack配置文件(78集未听)</h2><h2 id="loader" tabindex="-1"><a class="header-anchor" href="#loader" aria-hidden="true">#</a> loader</h2><p>算了 83-90都不听了</p><h1 id="vue-cli" tabindex="-1"><a class="header-anchor" href="#vue-cli" aria-hidden="true">#</a> Vue CLI</h1><h2 id="安装vue-cli" tabindex="-1"><a class="header-anchor" href="#安装vue-cli" aria-hidden="true">#</a> 安装Vue cli</h2><blockquote><p>` npm install -g @vue/cli</p></blockquote><blockquote><p>` vue --version 查看脚手架版本</p></blockquote><blockquote><p>` npm install -g @vue/cli-init 拉取脚手架2版本</p></blockquote><h2 id="vue-cli2" tabindex="-1"><a class="header-anchor" href="#vue-cli2" aria-hidden="true">#</a> Vue cli2</h2><p>创建脚手架2项目</p><blockquote><p>` vue init webpack 项目名</p></blockquote><h2 id="vue-cli3" tabindex="-1"><a class="header-anchor" href="#vue-cli3" aria-hidden="true">#</a> Vue cli3</h2><blockquote><p><code>创建cli3的项目</code> ` vue create 项目名称</p></blockquote><figure><img src="'+h+'" alt="image-20220419091858429" tabindex="0" loading="lazy"><figcaption>image-20220419091858429</figcaption></figure><p>默认和手动</p><p><em>以下是点击手动后</em></p><figure><img src="'+q+'" alt="image-20220419092020480" tabindex="0" loading="lazy"><figcaption>image-20220419092020480</figcaption></figure><p>上下选择，空格选中，手动配置</p><p>选择之后回车，到以下步骤</p><figure><img src="'+f+'" alt="image-20220419092459651" tabindex="0" loading="lazy"><figcaption>image-20220419092459651</figcaption></figure><p>1.放在单独的配置文件中 √</p><p>2.放在package.json文件中</p><p><em>点击第一个后，到下面步骤，询问是否保存</em></p><figure><img src="'+x+'" alt="image-20220419092647214" tabindex="0" loading="lazy"><figcaption>image-20220419092647214</figcaption></figure><p>选y</p><p>后选择npm，开始安装</p><p>在终端输入,运行vue3项目</p><blockquote><p>` npm run serve</p></blockquote><p>修改vue cli配置</p><p>在命令行输入</p><blockquote><p>` vue ui</p></blockquote><p>打开仪表盘</p><h1 id="vue路由vuecli2" tabindex="-1"><a class="header-anchor" href="#vue路由vuecli2" aria-hidden="true">#</a> Vue路由 VueCli2</h1><p>前端渲染:</p><p>后端渲染：jsp或php将网页全部渲染，然后再显示在页面</p><p>安装vue-router</p><blockquote><p>` npm install vue-router --save</p></blockquote><figure><img src="'+j+`" alt="image-20220419153931918" tabindex="0" loading="lazy"><figcaption>image-20220419153931918</figcaption></figure><h2 id="路由配置方式" tabindex="-1"><a class="header-anchor" href="#路由配置方式" aria-hidden="true">#</a> 路由配置方式</h2><p>在router文件夹下的index.js中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//配置路由相关的信息</span>
<span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token comment">//1.通过Vue.use(插件) 安装插件</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span>

<span class="token comment">//2.创建VueRouter对象</span>
<span class="token keyword">const</span> routes<span class="token operator">=</span><span class="token punctuation">[</span>

<span class="token punctuation">]</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">//配置路由和组件之间的映射关系</span>
  routes<span class="token punctuation">,</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token string">&#39;history&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//将router对象传入到Vue实例中</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> router

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>导入两个插件</code><code>使用vue安装插件</code><code>创建VueRouter对象</code><code>配置映射关系</code><code>导出</code> \` 配置mode:&#39;history&#39; 渲染组件时，路径没有#号，而是普遍的url地址</p></blockquote><p>在某个vue实例中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App&#39;</span>
<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;./router&#39;</span>

Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>

<span class="token comment">/* eslint-disable no-new */</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
  router<span class="token punctuation">,</span>
  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span>\` <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>先导入router</code> \` 再使用字面量增强:router:router</p></blockquote><ul><li>日后将在index.js中的第二步中添加很多url映射来表示跳转到哪个页面</li><li>并且每一个映射都是一个对象</li></ul><h2 id="使用vue-router的步骤" tabindex="-1"><a class="header-anchor" href="#使用vue-router的步骤" aria-hidden="true">#</a> 使用vue-router的步骤</h2><ul><li>1.创建路由组件</li><li>2.配置路由映射：组件和路径映射关系</li><li>3.使用路由:通过<code>&lt;router-link&gt;</code>和<code>&lt;router-view&gt;</code></li></ul><p>先创建两个组件,在components中</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\`
  \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>\`我是首页\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\`我是首页内容，哈哈哈哈哈\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\`
  \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\`
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\`

\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
export default {
  name: &quot;Home&quot;
}
</span><span class="token template-punctuation string">\`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\`

\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\`

\`</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\`

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\`
  \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>\`我是关于\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\`我是关于内容，呵呵呵\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\`
  \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\`
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\`

\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
export default {
  name: &quot;About&quot;
}
</span><span class="token template-punctuation string">\`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\`

\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\`

\`</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\`

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code> 通过右击-&gt;</code>新建-&gt;\`vue组件</p></blockquote><p>在index.js中导入两个组件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">&#39;../components/Home&#39;</span>
<span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">&#39;../components/About&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在创建VueRouter对象的地方。每一个映射都是一个对象写法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//2.创建VueRouter对象</span>
<span class="token keyword">const</span> routes<span class="token operator">=</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/home&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span>Home
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span>About
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>对象中有两个键和值：</code> \` path:当url路径变为***时，触发component的值对象，对象就是从import所导入的</p></blockquote><p>在App.vue，也就是启动的组件中的模板中写入</p><h3 id="router-link" tabindex="-1"><a class="header-anchor" href="#router-link" aria-hidden="true">#</a> router-link</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;router-link to=&quot;/home&quot; tag=&quot;button&quot; replace&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;/router-link&gt;</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>to可以改变url地址。tag可以将<code>&lt;a&gt;</code>标签改为<code>&lt;button&gt;</code>标签,replace可以不能后退到之前的页面。</p><p>由于点击按钮时会触发一些class，在路由index.js文件中修改一下，再设置一个css样式，可以实现，点击变色</p><p>index.js:</p><figure><img src="`+y+'" alt="image-20220419165940577" tabindex="0" loading="lazy"><figcaption>image-20220419165940577</figcaption></figure><p>再在App.vue中设置一个css样式，可以对应到active</p><figure><img src="'+w+'" alt="image-20220419170307964" tabindex="0" loading="lazy"><figcaption>image-20220419170307964</figcaption></figure>',107),T=n("code",null," <router-link>",-1),E=n("code",null,"</router-link>",-1),U=n("code",null,null,-1),L=n("code",null," 可以改变url路径中的地址 ",-1),R=n("code",null,"从而触发VueRouter对象中的键值",-1),P=n("code",null,"<router-view></router-view>",-1),I=a(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\`
  \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`首页\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`关于\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span>\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\`
  \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\`
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\`

\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
export default {
  name: &#39;App&#39;
}
</span><span class="token template-punctuation string">\`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\`

\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\`

\`</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\`

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>路由的默认路径</code><code>{</code><code>​ path:&#39;/&#39;,</code><code>​ redirect:&#39;/home&#39;</code><code>}</code> \` 使用重定向，在第一次点击网页时就可以显示首页</p></blockquote><h3 id="button方式" tabindex="-1"><a class="header-anchor" href="#button方式" aria-hidden="true">#</a> button方式</h3><p>不使用router-link跳转，而使用按钮和绑定单击事件来跳转</p><p>方法在export default中使用</p><blockquote><p>\` 在单击触发的方法中，使用this对象的$router方法。同样，拥有push()和replace两种方法，前者可返回，后者不可返回,参数是路由中的映射</p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\`
  \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btnhome<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`首页\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btnabout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`关于\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span>\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\`
  \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\`
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\`

\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
export default {
  name: &#39;App&#39;,
  methods:{
    btnhome(){
      this.$router.replace(&#39;/home&#39;)
    },
    btnabout(){
      this.$router.replace(&#39;/about&#39;)
    }
  }
}
</span><span class="token template-punctuation string">\`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\`

\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">\`
  .active</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
\`</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\`

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态路由-并且传参" tabindex="-1"><a class="header-anchor" href="#动态路由-并且传参" aria-hidden="true">#</a> 动态路由，并且传参</h2><h3 id="使用params的类型" tabindex="-1"><a class="header-anchor" href="#使用params的类型" aria-hidden="true">#</a> 使用params的类型</h3><p>在路由代码的index.js文件中，在routes的多个映射中的path的值中添加参数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/user/:userid&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> User
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后面的:userid即是参数</p><p>在传递参数的一端使用<code>&lt;router-link&gt;</code>时，将修饰符<mark>to</mark> ，改为==:to== ,意为被vue所解析，并且在，组件的data中定义属性</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>/user/&#39;+userid<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`关于\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>\` userid即是要传输过去的参数</p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>data(){
    return{
      userid:&#39;zhangsan&#39;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\` 在组件data中定义userid</p></blockquote><p>最后在最终跳转过去的页面的组件中使用计算属性来获取传输过去的参数</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>export default {
  name: &quot;User&quot;,
  computed:{
    userid(){
      return this.$route.params.userid
    }
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>使用 this.$route.params.userid 来获取userid并用插值=={{}}==语法显示在页面中</code><code>也可以在插值语法中直接=={{$route.params.userid}}==,就是省略计算属性这一步</code><code>其中，</code><code>router ：是路由对象</code><code>routes ：是多个路由映射</code> \` route ：是当前活动的路由</p></blockquote><h3 id="使用query的类型" tabindex="-1"><a class="header-anchor" href="#使用query的类型" aria-hidden="true">#</a> 使用query的类型</h3><p>之前是在路由映射时，在path的值中写:id,来接收传输过来的参数，传输端也必须写完整的路径，现在可以使用query类型来传输参数，有以下特点</p><ul><li><p>1.路由映射无须在路径带参数，直接写普通路径即可</p></li><li><p>2.在传输端的:to的地方不在写单一的路径，而是</p><blockquote><p>\` {path:&#39;/路径&#39;,query:</p></blockquote></li><li><p>在一个对象中，有<mark>path</mark> 和<mark>query</mark> 两个键，path键表示要映射哪个组件。query表示传输过去的参数，传输的参数是一个对象类型。如</p></li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{path:&#39;/profile&#39;,query:{name:&#39;erickiku&#39;,age:18,height:1.88}}     <span class="token punctuation">&quot;</span></span><span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Profile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ 就是传输到一个profile所映射的组件中，并且传输过去name,age,height三个参数，网页显示的路径是以==？== 拼接的。</p><p>在接收端接收参数是：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\`{{$route.query.name}}\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\`
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\`{{$route.query.age}}\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\`
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\`{{$route.query.height}}\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="路由懒加载" tabindex="-1"><a class="header-anchor" href="#路由懒加载" aria-hidden="true">#</a> 路由懒加载</h2><p>两种方式：都需要把最上方的import的引入组件的代码删除</p><blockquote><p><code>① 在路由映射的component处将 ==component:Home== 改为</code><code> ​ ==component:() =&gt;</code> import(&#39;../components/Home&#39;)== <code></code> ② 在之前import导入组件的地方改为 <code></code> ​ const Home =() =&gt;<code>import(&#39;../components/Home&#39;)</code><code>​ 再将==component:Home== ，即可</code> \` ​</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//2.创建VueRouter对象</span>
<span class="token keyword">const</span> routes<span class="token operator">=</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">redirect</span><span class="token operator">:</span><span class="token string">&#39;/home&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/home/:homeid&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">component</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> import(&#39;../components/Home&#39;)
  },
  {
    path:&#39;/about/:aboutid&#39;,
    component:() =&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/About&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/user/:userid&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\` <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/User&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Home</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> import(&#39;../components/Home&#39;)
const About =() =&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/About&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">User</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\` <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/User&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="路由的嵌套使用" tabindex="-1"><a class="header-anchor" href="#路由的嵌套使用" aria-hidden="true">#</a> 路由的嵌套使用</h2><p>也就是子路由</p><p>如在/home目录下还有一个/home/news文件</p><p>想要访问news或其他子目录，需要路由嵌套</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/home/:homeid&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">component</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> import(&#39;../components/Home&#39;),
    children:[
      {
        path: &#39;&#39;,
        redirect:&#39;news&#39;
      },
      {
        path:&#39;news&#39;,
        component:() =&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/HomeNews&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span>
        <span class="token function-variable function">component</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\` <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/HomeMessage&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在/home的路由映射中，写入第三个属性children，参数同样是==[]==数组，和父目录一模一样，</p><p>创建方式也一样。</p><blockquote><p><code> 只有在子目录中想要使用**router-view**占位符时，不再是在App.vue中，而是在其父组件中写==\`\`&lt;router-view&gt;</code>和跳转标签<code>&lt;router-link&gt;</code></p></blockquote><h2 id="全局导航守卫" tabindex="-1"><a class="header-anchor" href="#全局导航守卫" aria-hidden="true">#</a> 全局导航守卫</h2><p>用于监听全局的路由事件</p><p>例如，要改变所点击的组件的title值.</p><p>使用 router.beforeEach() 前置钩子(hook)/前置守卫(guarg)</p><p>在路由映射中添加一个属性,和path同级</p><p>next()可以有参数:**next(false)**中断当前导航、**next(&#39;/&#39;)**跳转到指定地址、</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">meta</span><span class="token operator">:</span><span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">&#39;用户&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>案例:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\` <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span>title<span class="token operator">=</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 router.afterEach()</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><blockquote><p><code>还有路由独享守卫</code> \` 组件内的守卫</p></blockquote><h2 id="keep-alive" tabindex="-1"><a class="header-anchor" href="#keep-alive" aria-hidden="true">#</a> keep-alive</h2><p>保持组件活跃，不会频繁销毁、创建</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span> <span class="token attr-name">exclude</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`
	\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">/&gt;</span></span>\`
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">&gt;</span></span>\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>将router-view包裹后，所有在router-view显示的组件都将保持生命，include是包括哪些</code> \` exclude是不包括哪些,案例是不包括name为User的组件</p></blockquote><h1 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> Promise</h1><p>一般情况下是有异步操作时，使用Promise对这个异步操作进行封装</p><p>new Promise()，定义一个异步对象</p><p>参数是一个函数:(resolve,reject)</p><p>resolve和reject本身就是函数</p><p>setTimeout处写准备处理的数据，then()处理具体的事务</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> {
    setTimeout(() =&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">{</span>
    	<span class="token punctuation">.</span>
        <span class="token punctuation">.</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//setTimeout()代表一个异步线程</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果有很多异步，可以在一个线程中再return new Promise()</p><p>resolve会跳转到then。</p><p>reject会跳转到catch</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> {
    setTimeout(() =&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{
    console.log(&#39;hello&#39;);
    console.log(&#39;hello&#39;);

    return new Promise((resolve,reject) =&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> {
        resolve()
      },1000)
    })
  }).then(()=&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>\`<span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>catch函数可以在then里面</code><code> .then((data)=&gt;</code>{ <code></code> },(err)=&gt;<code>{ </code><code>})</code> \` 满足就执行第一个，不满足就执行第二个</p></blockquote><h1 id="vuex" tabindex="-1"><a class="header-anchor" href="#vuex" aria-hidden="true">#</a> Vuex</h1><p>一种专门为Vue.js应用程序开发的状态管理模式</p><p>需要安装在项目中</p><blockquote><p>\` npm install vuex --save</p></blockquote><p>安装失败解决方法:</p><blockquote><p>\` npm install vuex@3.6.2 -S</p></blockquote><p>安装成功之后在src下创建<mark>store</mark> 文件夹</p><p>创建index.js</p><p>之后在main.js中引入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;Vue&#39;</span>
<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;Vuex&#39;</span>

<span class="token comment">//安装插件</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>

<span class="token comment">//创建对象</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span><span class="token number">1000</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">{</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">{</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">getters</span><span class="token operator">:</span><span class="token punctuation">{</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">modules</span><span class="token operator">:</span><span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//3.导出store</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> store

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App&#39;</span>
<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;./router&#39;</span>
<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&quot;./store&quot;</span><span class="token punctuation">;</span><span class="token comment">//--------------</span>
Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>

<span class="token comment">/* eslint-disable no-new */</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
  router<span class="token punctuation">,</span>
  store<span class="token punctuation">,</span><span class="token comment">//----------------</span>
  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span>\` <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\` 如果在store对象中的state方法中定义了属性，则这个属性可以被全局的组件所使用，使用方法是:如定义了一个counter</p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>\`{{$store.state.counter}}\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>\` 最好 不要直接修改store中state中的值，应该通过mutations来修改</p></blockquote><h2 id="通过mutations来操作state中的值" tabindex="-1"><a class="header-anchor" href="#通过mutations来操作state中的值" aria-hidden="true">#</a> 通过mutations来操作state中的值</h2><blockquote><p><code>这里定义了两个方法，分别是state和mutations</code> \` mutations中有两个函数，用来操作state中的值</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span><span class="token number">1000</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token function">increment</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>counter<span class="token operator">++</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>counter<span class="token operator">--</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">{</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">getters</span><span class="token operator">:</span><span class="token punctuation">{</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">modules</span><span class="token operator">:</span><span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>调用mutations中的函数不是直接调用函数名，而是用</code><code>this.$store.commit(&#39;increment&#39;) 来提交</code> \` 参数是函数名</p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\`
  \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>\`{{$store.state.counter}}\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`+\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sub<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\`-\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HelloVuex</span><span class="token punctuation">&gt;</span></span>\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HelloVuex</span><span class="token punctuation">&gt;</span></span>\`
  \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\`
\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\`

\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
import HelloVuex from &quot;./components/HelloVuex&quot;;
  export default {
    name: &#39;App&#39;,
    components:{
      HelloVuex
    },
    methods:{
      add(){
        this.$store.commit(&#39;increment&#39;)
      },
      sub(){
        this.$store.commit(&#39;decrement&#39;)
      }
    }
  }
</span><span class="token template-punctuation string">\`</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\`

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vuex核心概念" tabindex="-1"><a class="header-anchor" href="#vuex核心概念" aria-hidden="true">#</a> Vuex核心概念</h2><p><mark>1、 State 2、Getters 3、Mutation 4、Action 5、Module</mark></p><h3 id="state单一状态树" tabindex="-1"><a class="header-anchor" href="#state单一状态树" aria-hidden="true">#</a> State单一状态树</h3><p>尽量不要定义多个store</p><p>state中存放数据，用于被其他类如getters调用</p><p>state中的属性，可以被全局调用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h2&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">{</span><span class="token punctuation">{</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>counter<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;/h2&gt;</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但是尽量不要直接修改state中的值，应该用其他方法来调用state中的这个值，类如上一条目录中用mutations来操作state中的数据</p><h3 id="getters" tabindex="-1"><a class="header-anchor" href="#getters" aria-hidden="true">#</a> Getters</h3><p>在getters中可以写函数，用于操作state中的属性。</p><p>getters中的函数有都有两个参数，第一个是 state本身，第二个是getters本身，不接受其他参数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">getters</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token function">powerCounter</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> state<span class="token punctuation">.</span>counter <span class="token operator">*</span> state<span class="token punctuation">.</span>counter
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">more20stu</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> state<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">s</span> <span class="token operator">=&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> s.age &gt;</span><span class="token template-punctuation string">\`</span></span><span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">more20stuLength</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>getters</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> getters<span class="token punctuation">.</span>more20stu<span class="token punctuation">.</span>length
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">moreAgeStu</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">age</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> state<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">s</span> <span class="token operator">=&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">s.age &gt;</span><span class="token template-punctuation string">\`</span></span> age<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>其中有四个函数</code><code>powerCounter(stae) 是获取state中的counter的平方</code><code>more20stu(state) 是获取大于20岁的学生</code><code>more20stuLength(state,getters) 是获取长度，而且传入了getters，调用另一个函数more20stu来使用他的函数体</code> \` moreAgeStu是根据传输的参数来获取大于这个参数的学生,但是只能传输两个参数，所以要return一个function,用function来接收传输过来的数据</p></blockquote><blockquote><p><code> 调用时：</code><h2><code>{{$store.getters.powerCounter}}</code></h2><code></code><code> 带参:</code><h2><code>{{$store.getters.moreAgeStu(20)}}</code></h2>\`</p></blockquote><h3 id="mutations状态更新" tabindex="-1"><a class="header-anchor" href="#mutations状态更新" aria-hidden="true">#</a> Mutations状态更新</h3><p>在通过mutation更新数据的时候，可以携带一些额外参数。这个参数成为负载/载荷(Payload)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token function">increment</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>counter<span class="token operator">++</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>counter<span class="token operator">--</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>counter <span class="token operator">+=</span> value
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>其中有三个方法，分别是+和-</code><code>还有一个携带了参数，携带参数时，提交是这样的：</code><code>\`\`\`vue</code> addCount(value){ <code> this.$store.commit(&#39;incrementCount&#39;,value)</code> } <code>\`\`\`</code><code>在提交的名称后加一个参数</code> \` 如果参数较多，就可以直接封装为一个对象，传输一个对象</p></blockquote><p><mark>另一种提交风格</mark></p><p>提交的commit是一个对象，有type和另一个携带参数</p><p>type对应的就是mutations中的函数</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>addCount(value){
        this.$store.commit({
          type:&#39;incrementCount&#39;,
          value:value
        })
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接收的时候，第二个参数就成为payload,是一个对象，包含了commite中对象的所有键</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>payload</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>counter <span class="token operator">+=</span> payload<span class="token punctuation">.</span>value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="action" tabindex="-1"><a class="header-anchor" href="#action" aria-hidden="true">#</a> Action</h3><p>不能在Mutation中进行异步操作</p><p>Action类似于Mutation,但是用来代替Mutation进行异步操作的</p><p>在actions中定义了一个aUpdateInfo函数，第一个参数固定，上下文。第二个是传参</p><p>返回一个Promise对象</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token function">aUpdateInfo</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>message</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{
        setTimeout(()=&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">{</span>
          context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在调用的地方写then</p><p>this.$store.dispatch(&#39;aUpdateInfo&#39;,&#39;我是message&#39;)返回的就是一个Promise对象，所以可以直接.then，并且可以带回来一个参数</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>updateInfo(){
        this.$store.dispatch(&#39;aUpdateInfo&#39;,&#39;我是message&#39;)
          .then((res)=&gt;\`{
            console.log(&#39;提交成功&#39;);
            console.log(res);
          })
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="modules" tabindex="-1"><a class="header-anchor" href="#modules" aria-hidden="true">#</a> Modules</h3><p>在modules中可以再定义其他所有的属性:state,getters,mutations,action这些</p><p>并且，在调用时:</p><p>如，定义了一个模块a,并且state中有一个name属性，则是这么调用的</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> moduleA<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;zhangsan&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">getters</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token literal-property property">modules</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span>moduleA
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用name:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>$store.state.a.name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提交Mutation的方法和之前是一样的</p><p>调用Getters的方法也和之前一样，直接调用，不用管是否在模块里</p><p>模块中的getters中的方法有三个参数，前两个是state和getters,第三个是rootState，也就是默认state中的数据，可以用rootState.counter来获取之前案例的counter的值</p><h2 id="vuex的目录组织结构" tabindex="-1"><a class="header-anchor" href="#vuex的目录组织结构" aria-hidden="true">#</a> Vuex的目录组织结构</h2><p>1.将state属性抽离在index.js的store对象外</p><p>2.将getters、mutations、action三个属性抽离到一个单独的文件中，在导出和引入</p><p>3.将modules抽离成文件夹，在modules的模块创建在文件夹下的单独文件中。</p><p>4.最后都在index.js中引入</p><h1 id="安装devtools" tabindex="-1"><a class="header-anchor" href="#安装devtools" aria-hidden="true">#</a> 安装devtools</h1>`,137),D={href:"https://blog.csdn.net/qq_51558433/article/details/118107157",target:"_blank",rel:"noopener noreferrer"},B=n("h1",{id:"响应式原理没有学会",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#响应式原理没有学会","aria-hidden":"true"},"#"),s(" 响应式原理没有学会")],-1);function O(e,G){const l=c("ExternalLinkIcon"),o=c("router-link");return u(),r("div",null,[_,n("blockquote",null,[n("p",null,[s("` vue开发版本安装:"),n("a",A,[s("https://cn.vuejs.org/v2/guide/installation.html"),p(l)])])]),C,n("p",null,[s("插值操作，Mustache的就是指的大括号 "),n("mark",null,t(),1)]),$,n("blockquote",null,[n("p",null,"` 输出结果是"+t(e.message),1)]),H,n("blockquote",null,[n("p",null,[S,N,s(" ` 用css控制div的display属性，在此div没有被vue渲染时不会被显示而不是显示"+t(e.message),1)])]),M,n("p",null,"1.创建模板，在模板中使用插值=="+t()+"==语法来获取对象中的数据",1),z,n("blockquote",null,[n("p",null,[T,s("首页"),E,s(" 可以创建一个类似a标签的控件 "),U,s(),p(o,{to:"/home"},{default:k(()=>[s("``")]),_:1}),L,R,P,s(" 类似于占位符，当router-link的标签被点击时，组件渲染的地方")])]),I,n("p",null,[n("a",D,[s("https://blog.csdn.net/qq_51558433/article/details/118107157"),p(l)])]),B])}const F=i(V,[["render",O],["__file","Vue.html.vue"]]);export{F as default};
