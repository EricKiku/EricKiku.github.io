import{_ as s,W as n,X as r,Y as e,Z as d,$ as l,a2 as i,G as o}from"./framework-61af4b36.js";const c={},p=i(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> &quot;&quot;</h1><h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h2><h2 id="为什么要使用docker" tabindex="-1"><a class="header-anchor" href="#为什么要使用docker" aria-hidden="true">#</a> 为什么要使用Docker</h2><h4 id="企业环境中存在的某个痛点" tabindex="-1"><a class="header-anchor" href="#企业环境中存在的某个痛点" aria-hidden="true">#</a> 企业环境中存在的某个痛点</h4><p>企业使用一项技术是为了解决当前企业环境中存在的某个痛点，目前行业存在以下几个痛点：</p><ol><li>软件更新发布及部署低效，过程繁琐需要人工介入</li><li>环境一致性难以保证</li><li>不同环境之间迁移成本太高。</li></ol><h4 id="docker能解决的问题" tabindex="-1"><a class="header-anchor" href="#docker能解决的问题" aria-hidden="true">#</a> Docker能解决的问题</h4><p>Docker的使用十分简单，从开发的角度来看就是三步：构建、运输、运行。</p><p>其中关键是构建步骤，即打包镜像文件。但是从测试和运维的角度来看，就只有两步：复制、运行。有了这个镜像文件，在哪里运行都可以，和平台无关。</p><p>Docker这种容器技术隔离出了独立的运行空间，不会和其他应用争用系统资源，不需要考虑应用之间的相互影响。</p><p>其次，因为在构建镜像时就处理完了服务程序对于系统的所有依赖，所以在使用时，可以忽略原本程序的依赖以及开发语言。对测试和运维人员而言，可以更专注于自己业务内容。</p><p>最后，Docker为开发者提供了一种开发环境的管理办法，帮助测试人员保证环境的同步，为运维人员提供了可移植的标准化部署流程。</p><h2 id="docker简介" tabindex="-1"><a class="header-anchor" href="#docker简介" aria-hidden="true">#</a> Docker简介</h2><p>Docker是一种运行与Linus和Windows上的软件，用于创建、管理和编排容器。</p><h4 id="docker引擎" tabindex="-1"><a class="header-anchor" href="#docker引擎" aria-hidden="true">#</a> Docker引擎</h4><p>Docker引擎可以从Docker网站下载，也可以基于GitHub上的源码进行构建，无论是开源版本还是商业版本，都有Linux和Windows版本</p><p>Docker引擎有两个版本:企业版EE和社区办CE。</p><p>每个季度，企业版和社区版都会发布一个稳定版本。社区版会提供 4 个月的支持，而企业版本会提供 12 个月的支持。</p><h4 id="docker官网" tabindex="-1"><a class="header-anchor" href="#docker官网" aria-hidden="true">#</a> Docker官网</h4><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">https</span><span class="token punctuation">:</span><span class="token header-value">//www.docker.com/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="安装docker" tabindex="-1"><a class="header-anchor" href="#安装docker" aria-hidden="true">#</a> 安装Docker</h2><p>1 . 查看内核版本</p><p>linux操作系统Centos7,linux 3.10内核，docker指名至少要3.8以上，(ubuntu下要linux内核3.8以上)</p><p>在linux操作系统终端中输入:</p><div class="language-po line-numbers-mode" data-ext="po"><pre class="language-po"><code>uname -a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装Docker</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">https</span><span class="token punctuation">:</span><span class="token header-value">//www.runoob.com/docker/ubuntu-docker-install.html</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="docker的中央仓库" tabindex="-1"><a class="header-anchor" href="#docker的中央仓库" aria-hidden="true">#</a> Docker的中央仓库</h2><p>Docker中央仓库，就是存放镜像的网站</p><h4 id="官网" tabindex="-1"><a class="header-anchor" href="#官网" aria-hidden="true">#</a> 官网</h4><p>镜像最全，但是下载速度慢</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">https</span><span class="token punctuation">:</span><span class="token header-value">//hub.docker.com/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>网易蜂巢</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//c.163.com/hub</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>daoCloud(推荐)</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//hub.daocloud.io/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="搭建私服" tabindex="-1"><a class="header-anchor" href="#搭建私服" aria-hidden="true">#</a> 搭建私服</h4><h6 id="_1-修改注册文件" tabindex="-1"><a class="header-anchor" href="#_1-修改注册文件" aria-hidden="true">#</a> 1. 修改注册文件</h6><p>修改/etc/docker/daemon.json文件，若文件不存在，则手动创建。</p><p>添加内容如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;https://docker-cn.com&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;insecure-registries&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;ip:port&quot;</span><span class="token punctuation">]</span><span class="token comment">//替换相应的ip和端口号</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_2-重启服务" tabindex="-1"><a class="header-anchor" href="#_2-重启服务" aria-hidden="true">#</a> 2. 重启服务</h6><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>systemctl daemon-reload
systemctl restart docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker镜像操作" tabindex="-1"><a class="header-anchor" href="#docker镜像操作" aria-hidden="true">#</a> Docker镜像操作</h2><h4 id="拉取镜像到本地" tabindex="-1"><a class="header-anchor" href="#拉取镜像到本地" aria-hidden="true">#</a> 拉取镜像到本地</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker pull 镜像名称<span class="token punctuation">[</span>:tag<span class="token punctuation">]</span>

如:
docker pull daocloud<span class="token punctuation">.</span>io/library/tomcat:8<span class="token punctuation">.</span>5<span class="token punctuation">.</span>15-jre8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看全部本地的镜像" tabindex="-1"><a class="header-anchor" href="#查看全部本地的镜像" aria-hidden="true">#</a> 查看全部本地的镜像</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="删除本地镜像" tabindex="-1"><a class="header-anchor" href="#删除本地镜像" aria-hidden="true">#</a> 删除本地镜像</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker rmi 镜像的标识
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删不掉就是里面有东西</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker <span class="token function">ps</span> <span class="token operator">-</span>a   <span class="token operator">/</span><span class="token operator">/</span>查看镜像状态
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker <span class="token function">rm</span> 标志   <span class="token operator">/</span><span class="token operator">/</span>删除
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker rmi 标志	<span class="token operator">/</span><span class="token operator">/</span>删除镜像
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="导入导出" tabindex="-1"><a class="header-anchor" href="#导入导出" aria-hidden="true">#</a> 导入导出</h4><p>将本地镜像导出</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">pwd</span>   <span class="token operator">/</span><span class="token operator">/</span>查看当前路径

docker save <span class="token operator">-</span>o 导出的路径 镜像id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加载本地的镜像文件</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker load <span class="token operator">-</span>i 镜像文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="修改镜像名称" tabindex="-1"><a class="header-anchor" href="#修改镜像名称" aria-hidden="true">#</a> 修改镜像名称</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker tag 镜像id 新镜像名称:版本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="docker容器操作" tabindex="-1"><a class="header-anchor" href="#docker容器操作" aria-hidden="true">#</a> Docker容器操作</h2><h4 id="运行容器" tabindex="-1"><a class="header-anchor" href="#运行容器" aria-hidden="true">#</a> 运行容器</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker run 镜像标识<span class="token punctuation">[</span>:tag<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>常用参数</strong></p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker run <span class="token operator">-</span>d <span class="token operator">-</span>p 宿主机端口:容器端口 <span class="token operator">--</span>name 容器名称 镜像的标识名称<span class="token punctuation">[</span>:tag<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>-d：代表后台运行</li><li>-p：宿主机端口:容器端口：为了映射当前Linux的端口和容器的端口</li><li>--name 容器名称 :指定容器的名称</li></ul><h4 id="查看运行结果" tabindex="-1"><a class="header-anchor" href="#查看运行结果" aria-hidden="true">#</a> 查看运行结果</h4><p>当容器中运行了tomcat的docker后，可以在浏览器中访问了</p><p>首先在Ubuntu中安装net-tools</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>sudo apt install net-tools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后查看ip地址</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>sudo ifconfig
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果：有ip4地址。</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>inet 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>150<span class="token punctuation">.</span>128  netmask 255<span class="token punctuation">.</span>255<span class="token punctuation">.</span>255<span class="token punctuation">.</span>0  broadcast 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>150<span class="token punctuation">.</span>255
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因为已经端口映射了，所以直接在浏览器访问：</p><p>192.168.150.128:8080</p><p>就可以访问tomcat官网</p><h4 id="查看正在运行的容器" tabindex="-1"><a class="header-anchor" href="#查看正在运行的容器" aria-hidden="true">#</a> 查看正在运行的容器</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker <span class="token function">ps</span> <span class="token punctuation">[</span><span class="token operator">-</span>qa<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>-a ：查看全部的容器，包括没有运行的</li><li>-q：只查看容器的标识</li></ul><h4 id="查看容器的日志" tabindex="-1"><a class="header-anchor" href="#查看容器的日志" aria-hidden="true">#</a> 查看容器的日志</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker logs <span class="token operator">-</span>f 容器id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="进入到容器内部" tabindex="-1"><a class="header-anchor" href="#进入到容器内部" aria-hidden="true">#</a> 进入到容器内部</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker exec <span class="token operator">-</span>it 容器id bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="删除容器" tabindex="-1"><a class="header-anchor" href="#删除容器" aria-hidden="true">#</a> 删除容器</h4><p>删除容器前，需要先停止容器</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token comment">## 停止指定的容器</span>
docker stop 容器ID

<span class="token comment">##停止全部容器</span>
docker stop $<span class="token punctuation">(</span>docker <span class="token function">ps</span> <span class="token operator">-</span>qa<span class="token punctuation">)</span>

<span class="token comment">##删除指定容器</span>
docker <span class="token function">rm</span> 容器ID

<span class="token comment">##删除全部容器</span>
docker <span class="token function">rm</span> $<span class="token punctuation">(</span>docker <span class="token function">ps</span> <span class="token operator">-</span>qa<span class="token punctuation">)</span>

<span class="token comment">##启动容器</span>
docker <span class="token function">start</span> 容器ID
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建mysql容器" tabindex="-1"><a class="header-anchor" href="#创建mysql容器" aria-hidden="true">#</a> 创建MySQL容器</h2><h4 id="创建mysql镜像" tabindex="-1"><a class="header-anchor" href="#创建mysql镜像" aria-hidden="true">#</a> 创建MySQL镜像</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker pull daocloud<span class="token punctuation">.</span>io/library/mysql:5<span class="token punctuation">.</span>7<span class="token punctuation">.</span>5-m15
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="查看mysql镜像" tabindex="-1"><a class="header-anchor" href="#查看mysql镜像" aria-hidden="true">#</a> 查看MySQL镜像</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="创建mysql容器-1" tabindex="-1"><a class="header-anchor" href="#创建mysql容器-1" aria-hidden="true">#</a> 创建MySQL容器</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker run <span class="token operator">-</span>d <span class="token operator">-</span>p 3306:3306 <span class="token operator">-</span>e MYSQL_ROOT_PASSWORD=root <span class="token operator">--</span>name mysql 镜像tag
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h4><h2 id="docker-数据卷" tabindex="-1"><a class="header-anchor" href="#docker-数据卷" aria-hidden="true">#</a> Docker 数据卷</h2><p>如果每次更新项目都要把项目放入容器中，未免太过于麻烦。</p><p>所以就有：数据卷。</p><p>数据卷：将宿主主机的一个目录，映射到容器的一个目录中，可以在宿主主机中操作目录中的内容，那么容器内部映射的文件，也会跟着一起改变。</p><h4 id="创建数据卷" tabindex="-1"><a class="header-anchor" href="#创建数据卷" aria-hidden="true">#</a> 创建数据卷</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker volume create 数据卷名称
<span class="token comment">## 创建数据卷之后，默认会存放在一个目录下 /var/lib/docker/volumes/数据卷名称/_data</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看数据卷的详细信息" tabindex="-1"><a class="header-anchor" href="#查看数据卷的详细信息" aria-hidden="true">#</a> 查看数据卷的详细信息</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker volume inspect 数据卷名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="查看全部数据卷" tabindex="-1"><a class="header-anchor" href="#查看全部数据卷" aria-hidden="true">#</a> 查看全部数据卷</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker volume <span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="删除数据卷" tabindex="-1"><a class="header-anchor" href="#删除数据卷" aria-hidden="true">#</a> 删除数据卷</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker volume <span class="token function">rm</span> 数据卷名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="应用数据卷" tabindex="-1"><a class="header-anchor" href="#应用数据卷" aria-hidden="true">#</a> 应用数据卷</h4><p>当你映射数据卷时，如果数据卷不存在。Docker会帮你自动创建，会将容器内部自带的文件，存储在默认的存放路径中。</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker run <span class="token operator">-</span>v 数据卷名称:容器内部的路径 镜像id
<span class="token comment">## 直接指定一个路径作为数据卷的存放位置，这个路径下是空的</span>
docker run <span class="token operator">-</span>v 路径:容器内部的路径 镜像id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker-file" tabindex="-1"><a class="header-anchor" href="#docker-file" aria-hidden="true">#</a> Docker file</h2><h4 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile</h4><p>是一个包含用于组合映像的命令的文本文档。可以使用在命令行中调用的任何命令。Docker通过读取Dockerfile中的指令自动生成映像。</p><p><code>docker build</code>命令用于从Dockerfile构建映像。可以在<code>docker build</code>命令中使用-f 标志指向文件系统中任何位置的Dockerfile</p><p>例如：</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker build <span class="token operator">-</span>f <span class="token operator">/</span>path/to/a/Dockerfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="dockerfile基本结构" tabindex="-1"><a class="header-anchor" href="#dockerfile基本结构" aria-hidden="true">#</a> Dockerfile基本结构</h4><p>一般分为四部分：</p><ol><li>基础镜像信息</li><li>维护者信息</li><li>镜像操作指令</li><li>容器启动时执行指令</li></ol><h4 id="dockerfile文件说明" tabindex="-1"><a class="header-anchor" href="#dockerfile文件说明" aria-hidden="true">#</a> Dockerfile文件说明</h4><p>Docker以从上到下的顺序运行Dockerfile的指令，为了指定基本映像，第一条指令必须是FROM。一个声明以##字符开头则被视为注释。可以在Dockerfile中使用 RUN，CMD，FROM，EXPOSE，ENV等指令。</p><p><strong>列出一些常用的指令：</strong></p><p><code>FROM：指定基础镜像，必须为第一个命令</code></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>FROM <span class="token operator">&lt;</span>image<span class="token operator">&gt;</span>
FROM <span class="token operator">&lt;</span>image<span class="token operator">&gt;</span><span class="token punctuation">:</span><span class="token operator">&lt;</span>tag<span class="token operator">&gt;</span>
FROM <span class="token operator">&lt;</span>image<span class="token operator">&gt;</span>@<span class="token operator">&lt;</span>digest<span class="token operator">&gt;</span>

例：  FROM mysql<span class="token punctuation">:</span><span class="token number">5.6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>MAINTAINER:维护者信息</code></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>格式： MAINTAINSE <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>

例： MAINTAINER Jasper Xu
	MAINTAINSE sore@<span class="token number">163</span><span class="token punctuation">.</span>com
	MAINTAINER Jasper Xu <span class="token operator">&lt;</span>sorex@<span class="token number">16</span><span class="token punctuation">.</span>com<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>RUN:构建镜像时执行的命令</code></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>RUN  用于在镜像容器中执行命令，其有两种执行方式
RUN <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span>

RUN <span class="token punctuation">[</span><span class="token string">&quot;executable&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;param1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;param2&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="docker自定义镜像" tabindex="-1"><a class="header-anchor" href="#docker自定义镜像" aria-hidden="true">#</a> Docker自定义镜像</h4>`,130),t={href:"https://www.bilibili.com/video/BV1zR4y1t7Wj/?p=178&spm_id_from=pageDriver&vd_source=4826e78be6a985a9a8641312e495221e",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"其后还有 docker-compose",-1);function h(v,m){const a=o("ExternalLinkIcon");return n(),r("div",null,[p,e("p",null,[e("a",t,[d("https://www.bilibili.com/video/BV1zR4y1t7Wj/?p=178&spm_id_from=pageDriver&vd_source=4826e78be6a985a9a8641312e495221e"),l(a)])]),u])}const b=s(c,[["render",h],["__file","Docker.html.vue"]]);export{b as default};
