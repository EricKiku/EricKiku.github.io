import{_ as l,W as i,X as a,a2 as p}from"./framework-61af4b36.js";const u={},e=p('<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> &quot;&quot;</h1><h2 id="第一章" tabindex="-1"><a class="header-anchor" href="#第一章" aria-hidden="true">#</a> 第一章</h2><p>1.[填空题] 软件工程层次图：</p><ul><li>工具</li><li>方法</li><li>过程</li><li>质量关注点</li></ul><p>2.从分析模型到设计模型的转化，分析模型都有：</p><ul><li>基于场景的元素</li><li>面向流的元素</li><li>基于类的元素</li><li>行为元素</li></ul><p>3.质量指导原则：</p><ul><li>设计应使用具备良好设计特征的构件组成</li><li>设计应模块化</li><li>设计应包含数据，接口，构件，体系结构的明确表示</li><li>设计应导出数据结构</li><li>设计应导出独立的构件</li><li>设计应导出接口</li><li>设计应导出获取的信息</li><li>设计应使用能有效传达其意义的表示法来表达</li></ul><p>4.FURPS指的是：</p><ul><li>功能性(F)、易用性(U)、可靠性(R)、性能(P)、可支持性(S)</li></ul><p>5.组织良好的设计类有四个特征：</p><ul><li>完整和充分性</li><li>原始性</li><li>高内聚，低耦合</li></ul><p>6.软件体系结构分四个研究领域：</p><ul><li>提供新的体系结构描述语言解决体系结构问题</li><li>知识的总结性研究</li><li>针对特定框架的研究</li><li>形式化支持的研究</li></ul><p>7.设计模式和应用框架的区别：</p><ul><li>设计模式是软件高效、成熟的设计模板，包含问题的解决方案</li><li>应用框架是整个或部分系统的可重用设计，一组抽象构件的集合和构件实例之间的交互</li></ul><h2 id="第二章" tabindex="-1"><a class="header-anchor" href="#第二章" aria-hidden="true">#</a> 第二章</h2><p>1.软件模型的发展轨迹：</p><ul><li>功能模型--对象模型--组件模型--配置型组件模型--服务模型--抽象模型</li></ul><p>2.非形式化描述具有以下缺陷</p><ul><li>语义模糊</li><li>由语义模糊引起的沟通障碍</li><li>无法实现系统验证</li><li>不适于描述体系结构行为</li></ul><p>3.形式化描述有以下特点：</p><ul><li>可以用于系统描述</li><li>比体系结构行为描述更胜一筹</li></ul><p>4.软件体系结构设计的基本任务是：</p><ul><li>识别构成系统的子系统，并建立子系统控制和通信的基本框架，以满足系统的功能性和非功能性需求</li></ul><p>5.体系结构描述语言ADL的非正式定义是：</p><ul><li>描述软件与系统结构的计算机语言</li></ul><p>6.ADL的基本元素：</p><ul><li>构件</li><li>连接器</li><li>配置</li></ul><h2 id="第三章" tabindex="-1"><a class="header-anchor" href="#第三章" aria-hidden="true">#</a> 第三章</h2><p>1.软件体系结构的模型分为五种：</p><ul><li>结构模型</li><li>框架模型</li><li>动态模型</li><li>过程模型</li><li>功能模型</li><li>常用的是，结构模型和动态模型</li></ul><p>2.UML(统一建模语言)的特点：</p><ul><li>统一标准</li><li>面向对象的特性</li><li>立于过程</li><li>可以清晰的表示系统的模型</li></ul><p>3.UML的14重图术语之中的三个（P72）：</p><ul><li>活动图</li><li>序列图</li><li>时序图</li></ul><p>4.[填空] 对象是现实世界中的个体或事物的抽象</p><ul><li>是其<code>属性</code>和<code>相关操作</code>的封装</li></ul><p>5.面向对象的优势：</p><ul><li>支持软件的重用性</li><li>提高软件的可维护性和安全性</li></ul><p>6.P84之后的时序图，状态图</p><p>7.UML工具：</p><ul><li>Rational Rose</li><li>IBM Rational RSA</li><li>Enterprise Architect</li><li>StarUML</li><li>Trufun Kant Studio</li></ul><h2 id="第四章" tabindex="-1"><a class="header-anchor" href="#第四章" aria-hidden="true">#</a> 第四章</h2><p>1.软件体系结构设计中，需要注意以下规则：</p><ul><li>改进软件架构，提高模块独立性</li><li>模块规模应该适中</li><li>深度、宽度等应该适当</li><li>力争降低模块接口的复杂度</li><li>设计单入单出的模块</li></ul><p>2.P94的图4-4和左侧解释</p><p>3.DSSA(特定领域的软件体系结构)与体系结构风格的区别：</p><ul><li>从不同的角度研究问题，前者从问题域出发，后者从解决域出发</li><li>DSSA只在某个特定领域提取，总结，组织</li><li>DSSA的工具只适用于一个较小的范围，其他领域难以复用</li></ul><p>4.软件产品线的主要组成部分：</p><ul><li>核心资源 和 软件产品集合</li></ul><p>5.软件可信性质有：</p><ul><li>可靠性</li><li>可靠安全性</li><li>保密安全性</li><li>生存性</li><li>容错性</li><li>实时性</li></ul><p>6.软件容错设计方法：</p><ul><li>恢复块</li><li>N-版本编程</li></ul><p>7.设计评审的原则：</p><ul><li>对产品评审，不是对开发人员</li><li>针对性</li><li>阐明问题所在</li><li>事先准备</li><li>确定软件是否遵循规格说明书</li><li>坚持记录</li></ul><h2 id="第五章" tabindex="-1"><a class="header-anchor" href="#第五章" aria-hidden="true">#</a> 第五章</h2><p>1.软件体系结构设计的核心问题：</p><ul><li>能否使用重复的体系结构模式</li></ul><p>2.基本风格解析：</p><ul><li>管道-过滤器</li><li>分层系统风格</li><li>仓库风格和黑板风格</li></ul><p>3.C/S体系结构的三个组成部分：</p><ul><li>数据库服务器</li><li>客户应用程序</li><li>网络</li></ul><p>4.C/S体系结构的缺点：</p><ul><li>开发成本高</li><li>客户端程序设计复杂</li><li>信息内容单一</li><li>用户界面风格不一</li><li>软件移植困难</li><li>软件维护困难</li><li>新技术不能轻易应用</li></ul><p>5.三层C/S体系结构将应用功能分成</p><ul><li>表示层</li><li>功能层</li><li>数据层</li></ul><p>6.三层C/S有以下优点：</p><ul><li>允许合理划分三层结构的功能</li><li>允许更灵活的选择相应的平台</li><li>各层可以并行开发</li><li>允许充分利用功能层有效地隔离开表示层和数据层</li></ul><p>7.B/S体系结构优点：</p><ul><li>简化客户端</li><li>适用于网上信息的发布</li><li>通过互联网技术统一访问不同种类的数据库</li></ul><p>8.正交软件体系结构由</p><ul><li>组织层 和 线索的构件 构成</li></ul><p>9.正交软件体系结构具有以下优点：</p><ul><li>结构清晰，易于理解</li><li>易修改，可维护性强</li><li>可移植性强</li></ul><h2 id="第六章" tabindex="-1"><a class="header-anchor" href="#第六章" aria-hidden="true">#</a> 第六章</h2><p>1.面向对象的思想软件开发的各个阶段：</p><ul><li>面向对象的分析</li><li>面向对象的设计</li><li>面向对象的编程实现</li></ul><p>2.AOP把系统关注点分为：</p><ul><li>核心关注点</li><li>横切关注点</li></ul><h2 id="第七章" tabindex="-1"><a class="header-anchor" href="#第七章" aria-hidden="true">#</a> 第七章</h2><p>1.P167 看PPT</p><p>2.P177，有个案例</p><h2 id="第九章" tabindex="-1"><a class="header-anchor" href="#第九章" aria-hidden="true">#</a> 第九章</h2><p>1.设计模式的核心思想：</p><ul><li>通过累计前人的经验，使得在面对新问题时，可以套用已有的模式，提高编程的效率</li></ul><p>2.设计模式的作用和研究意义：</p><ul><li>优化的设计经验</li><li>较高的复用性</li><li>丰富的表达能力</li><li>降低耦合性</li></ul><h2 id="第十章" tabindex="-1"><a class="header-anchor" href="#第十章" aria-hidden="true">#</a> 第十章</h2><p>1.使用Web服务的好处：</p><ul><li>平台的无关性</li><li>通用的通信信道</li><li>企业的互操作性</li><li>功能复用</li><li>拓展业务</li><li>服务器的中立性</li><li>安全的通信</li></ul><h2 id="第十一章" tabindex="-1"><a class="header-anchor" href="#第十一章" aria-hidden="true">#</a> 第十一章</h2><p>1.EJB构建模型的特点：</p><ul><li><p>EJB将成为用Java开发分布式的，面向对象的企业级应用系统的标准构件体系结构</p></li><li><p>使得应用系统开发变得容易</p></li><li><p>一次编写，到处运行</p></li><li><p>拥有统一的协议</p></li><li><p>EJB与已有的服务器平台等兼容</p></li></ul><p>2.EJB开发应用系统的优点：</p><ul><li>标准的Java技术，可以在不同的服务器上运行</li><li>修改应用系统很容易</li><li>应用系统经过划分后，使得构件之间相互独立</li><li>开发变得容易</li><li>在新的应用系统中复用，减少开发时间</li></ul><p>3.DCOM(微软的概念和程序接口)的特点：</p><ul><li>组件和复用</li><li>位置独立性</li><li>语言无关性</li><li>连接管理</li><li>可扩展性</li><li>对称的多进程处理</li></ul><h2 id="第十二章" tabindex="-1"><a class="header-anchor" href="#第十二章" aria-hidden="true">#</a> 第十二章</h2><p>1.质量属性：</p><ul><li>质量属性是一个组件或一个系统的非功能性特征</li></ul><p>2.质量属性特征：</p><ul><li>功能性</li><li>可靠性</li><li>可用性</li><li>有效性</li><li>可维护性</li><li>可移植性</li></ul><p>3.P293 图12-1的步骤</p><p>4.基于场景的评估方法的不足之处：</p><ul><li>评估对评估师经验要求高</li><li>重量级的评估技术成本比较高</li><li>没有考虑只是的积累问题，造成资源浪费</li><li>缺乏实用的评估管理工具</li></ul><p>5.SAAM的一般步骤：P295</p><p>6.ATAM要求三个小组参与合作：</p><ul><li>评估小组</li><li>项目决策者</li><li>涉众</li></ul><p>7.整个ATAM评估过程包括九个步骤：P300</p><h2 id="第十三章" tabindex="-1"><a class="header-anchor" href="#第十三章" aria-hidden="true">#</a> 第十三章</h2><p>1.软件再工程的过程模型：</p><ul><li>正向工程</li><li>库存目录分析</li><li>文档重构</li><li>逆向工程</li><li>代码重构</li><li>数据忠狗</li></ul><h2 id="第十四章" tabindex="-1"><a class="header-anchor" href="#第十四章" aria-hidden="true">#</a> 第十四章</h2><p>1.根据云计算服务的部署方式和服务对象范围，可以将云分为：</p><ul><li>公共云</li><li>私有云</li><li>混合云</li></ul><p>2.根据云计算的服务类型，可以分为三层：</p><ul><li>将基础设施作为服务</li><li>将平台作为服务</li><li>将软件作为服务</li></ul>',119),h=[e];function r(d,n){return i(),a("div",null,h)}const c=l(u,[["render",r],["__file","软件设计重点.html.vue"]]);export{c as default};
