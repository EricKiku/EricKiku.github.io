const e=JSON.parse('{"key":"v-0eb7e0fa","path":"/zh/backend/Golang/Docker.html","title":"Docker","lang":"zh-CN","frontmatter":{"title":"Docker","icon":"Docker","category":["后端","容器"],"tag":["Golang","Docker"],"description":"\\"\\" Docker 为什么要使用Docker 企业环境中存在的某个痛点 企业使用一项技术是为了解决当前企业环境中存在的某个痛点，目前行业存在以下几个痛点： 软件更新发布及部署低效，过程繁琐需要人工介入 环境一致性难以保证 不同环境之间迁移成本太高。 Docker能解决的问题 Docker的使用十分简单，从开发的角度来看就是三步：构建、运输、运行。 其中关键是构建步骤，即打包镜像文件。但是从测试和运维的角度来看，就只有两步：复制、运行。有了这个镜像文件，在哪里运行都可以，和平台无关。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zh/backend/Golang/Docker.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"Docker"}],["meta",{"property":"og:description","content":"\\"\\" Docker 为什么要使用Docker 企业环境中存在的某个痛点 企业使用一项技术是为了解决当前企业环境中存在的某个痛点，目前行业存在以下几个痛点： 软件更新发布及部署低效，过程繁琐需要人工介入 环境一致性难以保证 不同环境之间迁移成本太高。 Docker能解决的问题 Docker的使用十分简单，从开发的角度来看就是三步：构建、运输、运行。 其中关键是构建步骤，即打包镜像文件。但是从测试和运维的角度来看，就只有两步：复制、运行。有了这个镜像文件，在哪里运行都可以，和平台无关。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T13:07:22.000Z"}],["meta",{"property":"article:tag","content":"Golang"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:modified_time","content":"2023-04-24T13:07:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T13:07:22.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Docker","slug":"docker","link":"#docker","children":[]},{"level":2,"title":"为什么要使用Docker","slug":"为什么要使用docker","link":"#为什么要使用docker","children":[]},{"level":2,"title":"Docker简介","slug":"docker简介","link":"#docker简介","children":[]},{"level":2,"title":"安装Docker","slug":"安装docker","link":"#安装docker","children":[]},{"level":2,"title":"Docker的中央仓库","slug":"docker的中央仓库","link":"#docker的中央仓库","children":[]},{"level":2,"title":"Docker镜像操作","slug":"docker镜像操作","link":"#docker镜像操作","children":[]},{"level":2,"title":"Docker容器操作","slug":"docker容器操作","link":"#docker容器操作","children":[]},{"level":2,"title":"创建MySQL容器","slug":"创建mysql容器","link":"#创建mysql容器","children":[]},{"level":2,"title":"Docker 数据卷","slug":"docker-数据卷","link":"#docker-数据卷","children":[]},{"level":2,"title":"Docker file","slug":"docker-file","link":"#docker-file","children":[]}],"git":{"createdTime":1682341642000,"updatedTime":1682341642000,"contributors":[{"name":"EricKiku","email":"2966678301@qq.com","commits":1}]},"readingTime":{"minutes":6.2,"words":1859},"filePathRelative":"zh/backend/Golang/Docker.md","localizedDate":"2023年4月24日","excerpt":"<h1> \\"\\"</h1>\\n<h2> Docker</h2>\\n<h2> 为什么要使用Docker</h2>\\n<h4> 企业环境中存在的某个痛点</h4>\\n<p>企业使用一项技术是为了解决当前企业环境中存在的某个痛点，目前行业存在以下几个痛点：</p>\\n<ol>\\n<li>软件更新发布及部署低效，过程繁琐需要人工介入</li>\\n<li>环境一致性难以保证</li>\\n<li>不同环境之间迁移成本太高。</li>\\n</ol>\\n<h4> Docker能解决的问题</h4>\\n<p>Docker的使用十分简单，从开发的角度来看就是三步：构建、运输、运行。</p>\\n<p>其中关键是构建步骤，即打包镜像文件。但是从测试和运维的角度来看，就只有两步：复制、运行。有了这个镜像文件，在哪里运行都可以，和平台无关。</p>","autoDesc":true}');export{e as data};
